"""
ОПЕРАЦИЯ СО СТРОКАМИ

Метод split()

Задание 1

Дана строка в которой записаны IP-адреса и имена пользователей.
Тебе нужно отобрать IP и добавить их в список ips. Используй метод split(), цикл for и оператор in.
Между именем и IP стоит одиночный пробел.
Разбей строку, чтобы получить список с именами и IP.
Все IP состоят из четырёх чисел, которые отделяются друг от друга точкой. Например, 255.25.191.14.
Чтобы определить IP, проверь, содержит ли строка точку.

"""

ips = []

string = '192.168.12.12 Илон Маск 115.253.1.1 noname 255.25.191.14 Лев Толстой 112.15.191.09 Курт Воннегут'

# разбей строку string по пробелу и сохрани результат в переменную words
words = string.split()
# напиши цикл for с условием
# внутреннюю переменную назови w
for w in words:
    if '.' in w:
        ips.append(w)

print(ips)
# будет выведенено:
# ['192.168.12.12', '115.253.1.1', '255.25.191.14', '112.15.191.09']

"""

Метод replace()

Задание 1

На сайте знакомств есть страница регистрации. Одно из полей там — поле ввода телефона. Формат номера не стандартизирован.
Поэтому пользователи вводят его по-разному. 
Тебе пришла строка с номерами. Все они отличаются друг от друга.
Нужно убрать лишние символы и сохранить номера в едином формате.
Используй методы replace() и split().
Убери ненужные символы и сохрани номера как разные элементы одного списка. В правильной записи номера:
отсутствуют знаки ( , ), -;
отсутствуют пробелы.
Все номера содержат десять цифр, без учёта других знаков. Кода страны в номере нет.
Между номерами стоит знак ;. Все символы, которые тебе нужно исключить, уже добавлены в список replaced_symbols.

"""
phones = '996 934 85 92;9109676472;(920)751-61-12;9159143161;910-951-51-15;(960)9400088'

replaced_symbols = ['(', ')', '-', ' ']

# преобразования со строкой
for s in replaced_symbols:
    phones = phones.replace(s, '')

# сохрани в список номера без знаков «(», «,», «)», «-» и пробелов
phones_list = phones.split(';')

print(phones_list)
# будет выведенено:
# ['9969348592', '9109676472', '9207516112', '9159143161', '9109515115', '9609400088']


