"""

КЛАССЫ И ОБЪЕКТЫ

Как создать объект

Задание

Допиши класс «Кнопка» — Button.
У всех кнопок должна быть ширина width — 200 пикселей, а высота height — 50.
Допиши код метода __init__,
чтобы можно было создавать объекты с атрибутами color (цвет) и text (текст кнопки).
В классе создай два объекта: жёлтую кнопку и красную.
На жёлтой написано «Купить», на красной — «Удалить».
Выведи на экран ширину и цвет жёлтой кнопки, а потом — красной.

"""


class Button:
    width = 200
    height = 50

    # задай атрибуты width и height

    def __init__(self, color, text):  # допиши метод __init__
        self.button_color = color
        self.button_text = text

# создай объект с цветом кнопки 'жёлтый' и надписью 'Купить'
button_1 = Button('жёлтый', 'Купить')
# создай объект с цветом кнопки 'красный' и надписью 'Удалить'
button_2 = Button('красный', 'Удалить')

print(button_1.width)  # выведи ширину жёлтой кнопки
print(button_1.button_color)  # выведи цвет жёлтой кнопки
print(button_2.width)  # выведи ширину красной кнопки
print(button_2.button_color)  # выведи цвет красной кнопки

"""

Как взаимодействуют классы

Задание 1

Попробуем немного изменить пример.
Вместо класса Human будем использовать DogOwner — «владелец собаки». 
У владельца собаки питомец должен быть сразу, отдельно заводить его не нужно.
Поэтому будем создавать объект владельца уже с собакой.
Для этого нужно передать её через конструктор def __init__(self, name, dog).
Допиши метод call_dog_by_name() класса DogOwner.
Он нужен, чтобы владелец мог позвать свою собаку по имени.
Например, если имя собаки «Жучка», в консоль должно напечататься «Ко мне, Жучка».

"""

class Dog():
    tail = 1 # атрибуты одинаковые у всех объектов
    paws = 4

    def __init__(self, name, color): # метод __init__, задаёт имя и цвет
        self.dog_name = name
        self.dog_color = color

    def bark(self): # метод, с помощью которого собака гавкает
        print('гав-гав')

class DogOwner():
    def __init__(self, name, dog):
        self.name = name
        self.my_dog = dog

    def ask_dog_to_bark(self): # метод просит собачку погавкать
        self.my_dog.bark()

    def say_dogs_color(self): # метод называет цвет собачки
        print('У меня собака цвета', self.my_dog.dog_color)

    def call_dog_by_name(self):
        print('Ко мне,', self.my_dog.dog_name)

"""

Задание 2
Создай метод с названием pet_dog в классе MyDog.
Он будет гладить собаку и увеличивать её настроение на 25 процентов.
Метод должен выводить фразу «(имя собаки) доволен на (количество процентов) процентов!».
Например, «Барбос доволен на 75 процентов!».

"""

class MyDog():

    name = 'Барбос'
    mood = 50
    satiety = 50

    def give_dog_food(self):
        self.satiety += 10
        print(self.name, 'сыт на', self.satiety, 'процентов!')

    def pet_dog(self):
        self.mood += 25
        print(self.name, 'доволен на', self.mood, 'процентов!')


